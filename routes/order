1. create an index (home) view. page data should be here

2. can create a layout view to reference for all pages

3. create a controller (indexController to view index)

4. create a route in web.php to invoke/see the controller: Route::get('/', [IndexController::class, 'index']);

5. create the models and migrations nessesary to put into the database: php artisan make:model Posts -m

6. edit migrations to add what you need in the database. (for blog - categories/tags/posts)
create_posts_table.php:
public function up()
{
    Schema::create('posts', function (Blueprint $table) {
        $table->id();
        $table->bigInteger('category_id');
        // stores the id of the user that the post belongs to
        $table->bigInteger('user_id');
        $table->string('title');
        $table->string('slug')->unique();
        $table->text('content');
        $table->string('featured_image')->nullable();
        $table->boolean('is_featured')->default(false);
        $table->boolean('is_published')->default(false);
        $table->timestamps();
    });
}

7. define the corresponding database table in the model
protected $fillable = [
        'category_id',
        'user_id',
        "title",
        'content',
        'slug',
        'featured_image',
        'is_featured',
        'is_published'
];

8. update model with relationships. (relationship with users and posts)
Models/User.php:
public function posts()
{
    return $this->hasMany('App\Models\Post');
}
Models/Post.php:
public function user()
{
    return $this->belongsTo('App\Models\User');
}
public function category()
{
    return $this->belongsTo('App\Models\Category');
}

9. Run migration to insert into database:          (for blog - categories//index/posts/tag)
php artisan migrate

10. Add routes:
use App\Http\Controllers\PostController;
Route::get('/post/{slug}', [PostController::class, 'show']);
Route::get('/category/{slug}', CategoryController::class);

11. create the corrispondig controllers<?php
IndexController:
<?php

namespace App\Http\Controllers;

use App\Models\Post;
use App\Models\General; //Delete this line if you are using Voyager
use App\Models\Tag;
use App\Models\Category;
use Illuminate\Http\Request;

class IndexController extends Controller
{
    public function __invoke()
    {
        //get the general information about the website
        $website = General::query()->firstOrFail();

        //get the posts that are published, sort by decreasing order of "id".
        $posts = Post::query()
            ->where('is_published',true)
            ->orderBy('id','desc')
            ->get();

        //get the featured posts
        $featured_posts = Post::query()
            ->where('is_published',true)
            ->where('is_featured',true)
            ->orderBy('id','desc')
            ->take(5)
            ->get();

        //get all the categories
        $categories = Category::all();

        //get all the tags
        $tags = Tag::all();

        //get the recent 5 posts
        $recent_posts = Post::query()
            ->where('is_published',true)
            ->orderBy('created_at','desc')
            ->take(5)
            ->get();

        //return the data to the corresponding view
        return view('home', [
            'website' => $website,
            'posts' => $posts,
            'featured_posts' => $featured_posts,
            'categories' => $categories,
            'tags' => $tags,
            'recent_posts' => $recent_posts
        ]);
    }
}

PostController:
<?php

namespace App\Http\Controllers;

use App\Models\General; //Delete this line if you are using Voyager
use App\Models\Post;
use App\Models\Tag;
use App\Models\Category;
use Illuminate\Http\Request;

class PostController extends Controller
{
    public function show($slug)
    {
        //get the general information about the website
        $website = General::query()->firstOrFail();

        //get the requested post, if it is published
        $post = Post::query()
            ->where('is_published', true)
            ->where('slug', $slug)
            ->firstOrFail();

        //get all the categories
        $categories = Category::all();

        //get all the tags
        $tags = Tag::all();

        //get the recent 5 posts
        $recent_posts = Post::query()
            ->where('is_published', true)
            ->orderBy('created_at', 'desc')
            ->take(5)
            ->get();

        //return the data to the corresponding view
        return view('post', [
            'website' => $website,
            'post' => $post,
            'categories' => $categories,
            'tags' => $tags,
            'recent_posts' => $recent_posts,
        ]);
    }
}

12. Add pages
views:
vendor
- posts-list.blade.php
- sidebar.blade.php
master.blade.php
home.blade.php
category.blade.php
tag.blade.php
post.blade.php


